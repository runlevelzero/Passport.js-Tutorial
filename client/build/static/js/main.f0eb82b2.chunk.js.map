{"version":3,"sources":["components/pages/About.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","Fragment","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","props","todo","completed","textDecoration","padding","borderBottom","backgroundColor","inherits","createClass","key","value","_this$props$todo","id","title","style","display","type","onChange","changeMark","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","React","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","required","placeholder","flex","className","headerStyle","background","fontFamily","textAlign","linkStyle","Header","react_router_dom","to","App","uuid","v4","console","log","toConsumableArray","filter","newTodo","_this2","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0eb82b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <React.Fragment>\r\n        <h1>About</h1>\r\n        <p>This is the todo list app v1.0.0, it is part of a react course</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return (this.props.todo.completed) ? {\r\n            textDecoration: 'line-through',\r\n            padding: '10px',\r\n            borderBottom: '1px #cccccc dotted',\r\n            backgroundColor: '#a4ffa4'\r\n        } : {\r\n            textDecoration: 'none',\r\n            padding: '10px',\r\n            borderBottom: '1px #cccccc dotted',\r\n            backgroundColor: '#f4f4f4'\r\n        };\r\n\r\n    }\r\n    \r\n    render() {\r\n        const { id, title } = this.props.todo\r\n        return (\r\n            <div style={this.getStyle()}>\r\n            <p style={{display:'inline'}}>\r\n                <input type='checkbox' onChange={this.props.changeMark.bind(this, id)} />{' '}\r\n                {title}\r\n                <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>X</button>\r\n            </p>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    backgroundColor : \"#ff4444\",\r\n    color           : \"#ffffff\",\r\n    border          : \"none\",\r\n    padding         : '5px 9px',\r\n    borderRadius    : '50%',\r\n    cursor          : 'pointer',\r\n    float           : 'right'\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass Todos extends React.Component {\r\n    \r\n    render() {\r\n    return this.props.todos.map((todo) => (\r\n        <TodoItem key={todo.id} todo={todo} changeMark={this.props.changeMark} delTodo={this.props.delTodo}/>\r\n\r\n    ));\r\n    }\r\n  \r\n}\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Todos;\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        //this.setState({title: ''});\r\n    }\r\n    onChange = (e) => this.setState({[e.target.name] : e.target.value});\r\n    \r\n    render() {\r\n    return (\r\n        <form onSubmit={this.onSubmit} style={{display: 'flex'}}>\r\n            <input type='text' required=\"true\" name='title' placeholder='Add Todo...' value={this.state.value} onChange={this.onChange} style={{flex: '10', padding: '5px'}} />\r\n            <input type='submit' value=\"Add Item\" className=\"btn\" style={{flex: '1'}}/>\r\n        </form>\r\n    )\r\n    }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div style={headerStyle}> \r\n        <header>\r\n            <h1>//TODO:</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\r\n        </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst headerStyle = {\r\n  background : '#333',\r\n  color      : '#ccc',\r\n  fontFamily : '\\'Franklin Gothic Medium\\', \\'Arial Narrow\\', Arial, sans-serif',\r\n  textAlign  : 'center',\r\n  padding    : '10px' \r\n}\r\n\r\nconst linkStyle = {\r\n  color : '#ffffff',\r\n  textDecoration: 'none'\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport uuid from 'uuid';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport About from './components/pages/About';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport Header from './components/layout/Header';\nimport './App.css';\n\n\n\n\nclass App extends React.Component {\n  state = {\n    todos: [\n      {\n        id: uuid.v4(),\n        title: 'Take out the trash',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Dinner with Wife',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Meeting with Boss',\n        completed: false\n      }\n    ]\n  }\n  changeMark = (id) => {\n    console.log(id);\n    this.setState({todos: this.state.todos.map(todo => {\n        if(todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  }\n  delTodo = (id) => {\n    this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    })    \n  }\n  addTodo = (title) => {\n    console.log(title);\n    const newTodo = {\n      id:uuid.v4(),\n      title,\n      completed: false\n    }\n    this.setState({todos: [...this.state.todos, newTodo]})\n  }\n  render() {\n    console.log(this.state.todos);\n    return (\n      <Router>\n          <div className=\"App\">\n            <div className=\"container\">\n              <Header />\n              <Route exact path=\"/\" render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos todos={this.state.todos} changeMark={this.changeMark} delTodo={this.delTodo}/>\n                </React.Fragment>\n              )} />\n              <Route path='/about' component={About}/>\n              \n            </div>\n          </div>\n      </Router>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}